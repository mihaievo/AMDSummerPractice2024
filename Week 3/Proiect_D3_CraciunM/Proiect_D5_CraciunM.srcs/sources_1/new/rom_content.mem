001000_00000_00001_0000000000000101 // addi $1, $0, 5
000000_00001_00001_00011_00000_100000 // add $3, $1, $1
000000_00011_00001_00011_00000_100010 // sub $3, $3, $1
000000_00011_00000_00011_00000_100100 // and $3, $3, $0
000000_00011_00001_00011_00000_100101 // or $3, $3, $1
000000_00000_00011_00011_00000_101010 // slt $3, $0, $3
000010_00000000000000000000001001 // j 9 -> jumps over next instruction
001000_00000_00011_1111111111111111 // addi $3, $0, -1 - assume we want to loop from here
001000_00001_00001_1111111111111111 // addi $1, $1, -1 
101011_00000_00001_0000000011111111 // sw $1, $0(255) -> will write at ram[255]
100011_00000_00010_0000000011111111 // lw $2, $0(255)
000100_00000_00000_1111111111111011 // beq $0, $0, -5 - will loop main program from above